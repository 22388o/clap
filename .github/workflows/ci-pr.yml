name: CI-PR
on:
  pull_request:
    branches: [master]
concurrency:
  group: ci-pr-${{ github.ref }}
  cancel-in-progress: true
jobs:
  ci-pr:
    name: CI-PR
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: exit 0
  args:
    name: Args
    runs-on: ubuntu-latest
    outputs:
      minimal: ${{ steps.minimal.outputs.list }}
      full: ${{ steps.full.outputs.list }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - id: minimal
        name: Get args (Minimal)
        run: echo "::set-output name=list::$(make features-minimal)"
      - id: full
        name: Get args (Full)
        run: echo "::set-output name=list::$(make features-full)"
  test:
    name: Tests
    needs: [args]
    strategy:
      fail-fast: false
      matrix:
        rust: [1.54.0, stable]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Cache Builds
        uses: Swatinem/rust-cache@v1
      - name: Checkout
        uses: actions/checkout@v2
      - name: Compile (Minimal)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run ${{ needs.args.outputs.minimal }}
      - name: Test (Minimal)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ needs.args.outputs.minimal }}
      - name: Compile (Full)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-run ${{ needs.args.outputs.full }}
      - name: Test (Full)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: ${{ needs.args.outputs.full }}
